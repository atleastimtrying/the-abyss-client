// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  exports.Commands = (function() {
    function Commands(app) {
      var input;
      this.app = app;
      this.interpret = __bind(this.interpret, this);
      input = process.openStdin();
      input.setEncoding('utf8');
      input.on('data', this.interpret);
    }

    Commands.prototype.interpret = function(command) {
      var potential;
      if (command !== '') {
        potential = this.commands[command.toLowerCase()];
        console.log(command);
        if (potential) {
          return potential();
        } else {
          return this.app.emit('print', "Although " + command + " sounds like a great idea, It doesn&rsquo;t seem to be the right thing to do right now.");
        }
      }
    };

    Commands.prototype.commands = {
      'help': function() {
        this.app.emit('print', 'The abyss is played by entering text commands in the window below here are some of the commands available');
        this.app.emit('print', '<span class="highlight">help</span> : will bring up this screen to remind you of your options');
        this.app.emit('print', '<span class="highlight">look</span> : will show you the description of where you are');
        this.app.emit('print', '<span class="highlight">north</span> : will take you one area north');
        this.app.emit('print', '<span class="highlight">south</span> : will take you one area south');
        this.app.emit('print', '<span class="highlight">east</span> : will take you one area east');
        this.app.emit('print', '<span class="highlight">west</span> : will take you one area west');
        this.app.emit('print', '<span class="highlight">home</span> : will take you back to the entrance');
        return this.app.emit('print', '<span class="highlight">where</span> : will tell you your current coordinates');
      },
      'north': function() {
        return this.app.emit('north');
      },
      'n': function() {
        return this.app.emit('north');
      },
      'south': function() {
        return this.app.emit('south');
      },
      's': function() {
        return this.app.emit('south');
      },
      'east': function() {
        return this.app.emit('east');
      },
      'e': function() {
        return this.app.emit('east');
      },
      'west': function() {
        return this.app.emit('west');
      },
      'w': function() {
        return this.app.emit('west');
      },
      'home': function() {
        this.app.emit('print', 'With a twist in reality you are transported back');
        this.app.emit('updateUser', {
          x: 0,
          y: 0
        });
        return this.app.emit('getLocation', {
          x: 0,
          y: 0,
          fn: function(data) {
            return this.app.emit('printPlot', data);
          }
        });
      },
      'where': function() {
        return this.app.emit('getUser', function(user) {
          return this.app.emit('print', "By looking at the stars, some moss and the curve of the horizon you determine that your coordinates must be <br> <span class='highlight'>" + user.x + ", " + user.y + "</span>!");
        });
      },
      'look': function() {
        this.app.emit('print', 'you look around you');
        return this.app.emit('getUser', function(user) {
          return this.app.emit('getLocation', {
            x: user.x,
            y: user.y,
            fn: function(data) {
              return this.app.emit('printPlot', data);
            }
          });
        });
      }
    };

    return Commands;

  })();

}).call(this);
